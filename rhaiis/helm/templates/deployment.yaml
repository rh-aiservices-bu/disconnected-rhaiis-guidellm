apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "rhaiis.fullname" . }}
  labels:
    {{- include "rhaiis.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "rhaiis.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "rhaiis.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - python
            - '-m'
            - vllm.entrypoints.openai.api_server
          args:
            - '--port={{ .Values.service.port }}'
            - '--model=/mnt/models'
            - '--served-model-name={{ .Values.model.servedModelName }}'
            - '--tensor-parallel-size={{ .Values.resources.gpu  }}'
            - '--max-model-len={{ .Values.model.maxModelLen }}'
          resources:
            limits:
              nvidia.com/gpu: {{ .Values.resources.gpu | quote }}
            requests:
              nvidia.com/gpu: {{ .Values.resources.gpu | quote }}
          volumeMounts:
            - name: cache-volume
              mountPath: /mnt/models
            - name: shm
              mountPath: /dev/shm
      tolerations:
        - key: nvidia.com/gpu
          operator: Exists
      volumes:
        - name: cache-volume
          persistentVolumeClaim:
            claimName: {{ .Values.model.pvcName }}
        - name: shm
          emptyDir:
            medium: Memory
            sizeLimit: 2Gi